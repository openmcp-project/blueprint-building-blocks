---
########################################################################################################################
# @default -- list
defaults: []
########################################################################################################################
# @default -- list
# A [Composition](https://doc.crds.dev/github.com/crossplane/crossplane/apiextensions.crossplane.io/Composition/v1) defines a collection of managed resources or functions that Crossplane uses to create and manage new composite resources. [Read the Crossplane documentation](https://docs.crossplane.io/latest/concepts/compositions/) for more information about Compositions.
compositions:
  - name: ""
    labels: []
    annotations: []
    ownerReferences: []      
    spec:
      mode: ""
      writeConnectionSecretsTonamespace: "ns1"
      compositeTypeRef: []
      environment: []
      patchSets: []
      pipeline: []
      resources: []
      # -- *optional* - When a Crossplane Provider creates a managed resource it may generate resource-specific details, like usernames, passwords or connection details like an IP address.
      #   Crossplane stores these details in a Kubernetes Secret object specified by the `writeConnectionSecretToRef` values. Learn more about Crossplane concept [Managed Resources Fields](https://docs.crossplane.io/latest/concepts/managed-resources/#writeconnectionsecrettoref)!
      writeConnectionSecretToRef: []
########################################################################################################################